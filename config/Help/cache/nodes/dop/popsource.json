{"body": [{"indent": 0, "text": ["POP Source"], "type": "title", "extent": [66, 81], "level": 0}, {"indent": 0, "type": "summary", "extent": [81, 140], "text": ["A POP node that generates particles from geometry."]}, {"indent": 0, "type": "para", "extent": [140, 234], "text": ["POP Source is a node that generates particles from geometry, often a referenced SOP network."]}, {"body": [{"body": [{"indent": 8, "blevel": 10, "type": "ord", "extent": [253, 291], "text": ["Create an object."]}, {"body": [{"indent": 16, "type": "para", "extent": [397, 530], "text": ["The ", {"text": "", "fullpath": "/shelf/SOP/particle", "scheme": "Icon", "type": "link", "value": "SOP/particle"}, {"text": ["particle system"], "fullpath": "/dopparticles/index", "scheme": null, "type": "link", "value": "/dopparticles/"}, " will attach itself to the object you have selected."]}], "indent": 8, "text": ["Click the ", {"text": "", "fullpath": "/shelf/POP/source", "scheme": "Icon", "type": "link", "value": "POP/source"}, {"text": ["Source"], "fullpath": "/nodes/dop/popsource", "scheme": "Node", "type": "link", "value": "/nodes/dop/popsource"}, " tool on the ", {"text": ["Particles"], "type": "ui"}, " tab. "], "extent": [291, 397], "blevel": 10, "type": "ord"}, {"indent": 8, "blevel": 10, "type": "ord", "extent": [530, 626], "text": ["Click ", {"text": "", "fullpath": "/shelf/PLAYBAR/play_forward", "scheme": "Icon", "type": "link", "value": "PLAYBAR/play_forward"}, " ", {"text": ["play"], "fullpath": "/anim/playbar", "scheme": null, "type": "link", "value": "/anim/playbar"}, " to see the particles."]}], "container": true, "type": "ord_group"}, {"indent": 8, "type": "para", "extent": [626, 671], "text": [{"text": "", "fullpath": "/images/shelf/popsource.png", "scheme": "Image", "type": "link", "value": "/images/shelf/popsource.png"}]}], "indent": 0, "level": 2, "text": ["Using Source"], "extent": [222, 253], "container": true, "type": "h", "id": "includeme"}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [323, 378], "text": ["Where on the source geometry to emit points from."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [394, 454], "text": ["All of the points will emit points simultaneously."]}], "indent": 4, "type": "dt", "extent": [378, 394], "text": ["All Points"]}, {"body": [{"indent": 8, "type": "para", "extent": [472, 763], "text": ["All of the source object will be added to the particle system.\n        This includes non-points, such as primitives.  This is useful for\n        bringing in constraints or other geometry information.  Note\n        that most POPs just work on points, ignoring any attached geometry."]}], "indent": 4, "type": "dt", "extent": [454, 472], "text": ["All Geometry"]}, {"body": [{"indent": 8, "type": "para", "extent": [775, 856], "text": ["The desired number of points will be emitted from random source points."]}], "indent": 4, "type": "dt", "extent": [763, 775], "text": ["Points"]}, {"body": [{"indent": 8, "type": "para", "extent": [883, 992], "text": ["The desired number of points will be emitted from random locations on the surfaces of the geometry."]}], "indent": 4, "type": "dt", "extent": [856, 883], "text": ["Scatter onto Surfaces"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Emission Type"], "role": "item", "extent": [307, 323], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [791, 827], "text": ["Specifies the SOP to use."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [857, 923], "text": ["Use the SOP specified in the ", {"text": ["SOP"], "type": "ui"}, " parameter below."]}], "indent": 8, "type": "dt", "extent": [827, 857], "text": ["Use Parameter Values"]}, {"body": [{"indent": 12, "type": "para", "extent": [959, 1027], "text": ["Use the SOP connected to the DOP network\u2019s first input."]}], "indent": 8, "type": "dt", "extent": [923, 959], "text": ["Use First Context Geometry"]}, {"body": [{"indent": 12, "type": "para", "extent": [1064, 1133], "text": ["Use the SOP connected to the DOP network\u2019s second input."]}], "indent": 8, "type": "dt", "extent": [1027, 1064], "text": ["Use Second Context Geometry"]}, {"body": [{"indent": 12, "type": "para", "extent": [1169, 1237], "text": ["Use the SOP connected to the DOP network\u2019s third input."]}], "indent": 8, "type": "dt", "extent": [1133, 1169], "text": ["Use Third Context Geometry"]}, {"body": [{"indent": 12, "type": "para", "extent": [1274, 1343], "text": ["Use the SOP connected to the DOP network\u2019s fourth input."]}], "indent": 8, "type": "dt", "extent": [1237, 1274], "text": ["Use Fourth Context Geometry"]}], "container": true, "type": "dt_group"}], "indent": 4, "text": ["Geometry Source"], "role": "item", "extent": [770, 791], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1352, 1447], "text": ["Path to the SOP (when ", {"text": ["Geometry Source"], "type": "ui"}, " is set to ", {"text": ["Use\n        Parameter Values"], "type": "ui"}, ")."]}], "indent": 4, "text": ["SOP"], "role": "item", "extent": [1343, 1352], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1473, 1732], "text": ["When ", {"text": ["Geometry Source"], "type": "ui"}, " is set to ", {"text": ["Use Parameter Values"], "type": "ui"}, ", the\n        transform of the object containing the chosen SOP is applied to the\n        geometry. This is useful if the location of the geometry is defined by\n        an object transform. "]}], "indent": 4, "text": ["Use Object Transform"], "role": "item", "extent": [1447, 1473], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1054, 1267], "text": ["When in surface mode, this point attribute will be used to vary the\n    chance of any polygon from emitting polygons.  Higher values will\n    increase the relative chance of that polygon getting an emission."]}], "indent": 0, "text": ["Emission Attribute"], "role": "item", "extent": [1034, 1054], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1285, 1542], "text": ["New points will be spread out from each other.  This is done in successive passes, so the more iterations, the more equally spaced the sourced particles will be.  This may result in points matching frame to frame if they get over constrained, however."]}], "indent": 0, "text": ["Relax Iterations"], "role": "item", "extent": [1267, 1285], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1558, 1891], "text": ["Point radii will be scaled by this before any relaxing of the points.  Specifying a scale less than 1 will increase \"clumpiness\" of the resulting points,\n    with a value of zero resulting in no relaxation.  Specifying a scale greater than 1 may speed up convergence of the relaxation, especially when scattering\n    on curves."]}, {"indent": 4, "type": "para", "extent": [1891, 1977], "text": ["After any scaling, ", {"text": ["Max Relax Radius"], "type": "ui"}, " will be enforced before any relaxation. "]}], "indent": 0, "text": ["Scale Radii By"], "role": "item", "extent": [1542, 1558], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1995, 2117], "text": ["This must be set appropriately to prevent outlier points in low-density areas causing problems when relaxing points."]}, {"indent": 4, "type": "para", "extent": [2117, 2666], "text": ["In order to approximately maintain variations in density, points are assigned radii inversely proportional to density (for curves), the square root of\n    density (for surfaces), or the cube root of density (for volumes).  This may cause problems for areas whose densities are near zero, especially in volumes,\n    when painting density on a surface, or when using a density texture with a black background, since the radius approaches infinity.  This parameter\n    specifies the maximum radius within which points will influence other points."]}, {"indent": 4, "type": "para", "extent": [2666, 2834], "text": ["When this is disabled, there will still be a maximum radius, which is currently chosen as half the diagonal length of the bounding box of the input\n    geometry."]}], "indent": 0, "text": ["Max Relax Radius"], "role": "item", "extent": [1977, 1995], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2861, 3151], "text": ["When in surface mode, the constant and impulse point counts will be\n    scaled by the total area (taking into account any emission attribute)\n    of the geometry.  This lets you paint an emission density and have\n    the number of particles increase as the area of emission increases."]}], "indent": 0, "text": ["Scale Point Count by Area"], "role": "item", "extent": [2834, 2861], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3167, 3370], "text": ["The impulse and constant emission values are often set for an entire object, which is often larger than a unit area.  Therefore, this acts as a scale on their values before applying the area count."]}, {"indent": 4, "type": "para", "extent": [3370, 3551], "text": ["An object of the size of ", {"text": ["Reference Area"], "type": "ui"}, " will emit at the specified impulse/constant rate.  A larger object will emit proportionally more particles, and a smaller one less."]}], "indent": 0, "text": ["Reference Area"], "role": "item", "extent": [3151, 3167], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3571, 3724], "text": ["Potential new particles are compared against the existing set of particles.\n    If their ", {"text": ["pscale"], "type": "code"}, " attribute overlaps, the new particle isn\u2019t added."]}, {"indent": 4, "type": "para", "extent": [3724, 3850], "text": ["This can be useful to continuously add new particles to a sand simulation\n    without creating explosions from overlaps."]}, {"indent": 4, "type": "para", "extent": [3850, 4007], "text": ["Note this only tests against particles that already exsit, so it is\n    important the set of new sourced particles don\u2019t overlap within\n    themselves."]}], "indent": 0, "text": ["Remove Overlapping"], "role": "item", "extent": [3551, 3571], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Source"], "extent": [293, 307], "container": true, "type": "h", "id": null}, {"body": [{"indent": 4, "type": "para", "extent": [4019, 4129], "text": ["This operator has two methods for emitting particles. You can use these methods together or separately:"]}, {"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [4129, 4210], "text": [{"text": ["Impulse"], "type": "strong"}, " creates a certain number of particles each time the node cooks."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [4210, 4278], "text": [{"text": ["Constant"], "type": "strong"}, " creates a certain number of particles per second."]}], "container": true, "type": "bullet_group"}, {"body": [{"body": [{"type": "para", "indent": 8, "extent": [7307, 7507], "text": ["Turns ", {"text": ["impulse"], "type": "em"}, " emission on and off. Impulse emits the number of particles in the ", {"text": ["Impulse Birth Rate"], "type": "ui"}, " below each time the operator cooks. A value of 0 means off, any other value means on."]}], "indent": 4, "text": ["Impulse Activation"], "role": "item", "attrs": {"channels": "/impulseactivate"}, "extent": [7246, 7270], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [7559, 7658], "text": ["Number of particles to emit each time the node cooks (when ", {"text": ["Impulse activation"], "type": "ui"}, " is on)."]}], "indent": 4, "text": ["Impulse Count"], "role": "item", "attrs": {"channels": "/impulserate"}, "extent": [7507, 7526], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [7718, 7903], "text": ["Turns ", {"text": ["constant"], "type": "em"}, " emission on and off. Impulse emits the number of particles in the ", {"text": ["Constant birth rate"], "type": "ui"}, " below each second. A value of 0 means off, any other value means on."]}], "indent": 4, "text": ["Const. Activation"], "role": "item", "attrs": {"channels": "/impulseactivate"}, "extent": [7658, 7681], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [7959, 8046], "text": ["Number of particles to emit per second (when ", {"text": ["Constant  Activation"], "type": "ui"}, " is on)."]}], "indent": 4, "text": ["Const. Birth Rate"], "role": "item", "attrs": {"channels": "/impulserate"}, "extent": [7903, 7926], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4354, 4564], "text": ["This parameter is a cap on the total number of points in the bound geometry. If this limiting is enabled, then the emitter will not create any more particles once the specified maximum is reached."]}], "indent": 4, "text": ["Max Sim Points"], "role": "item", "extent": [4334, 4354], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4590, 4805], "text": ["Limit on the number of points that can be added each frame. This option can be used to prevent the emitter from spawning an undesirably large amount of particles as a result of errant parameter values."]}], "indent": 4, "text": ["Max Points per Frame"], "role": "item", "extent": [4564, 4590], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4833, 5361], "text": ["Emit particles by treating the birth rate as a probability.  If enabled, particle emission will be distributed randomly across timesteps when the birth rate is low. If disabled, the emission will occur at regular intervals.  For example, with a ", {"text": ["Constant Birth Rate"], "type": "ui"}, " of 1 and ", {"text": ["Probabilistic Emission"], "type": "ui"}, " enabled,  you will see particles emitted at random intervals but an overall rate of approximately 1 per second.  With ", {"text": ["Probabilistic Emission"], "type": "ui"}, " disabled, particles will be emitted at each one-second interval."]}], "indent": 4, "text": ["Probabilistic Emission"], "role": "item", "extent": [4805, 4833], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [8096, 8232], "text": ["Name of a group to put the new points into.  The particles will only be in this group the same substep that they were created."]}], "indent": 4, "text": ["Just Born Group"], "role": "item", "extent": [8075, 8096], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [8279, 8334], "text": ["How long the particle will live (in seconds)."]}], "indent": 4, "text": ["Life Expectancy"], "role": "item", "attrs": {"channels": "/life"}, "extent": [8232, 8253], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [8382, 8518], "text": ["Particles will live the number of seconds in ", {"text": ["Life Expectancy"], "type": "ui"}, ", plus or minus this number of seconds. Use 0 for no variance."]}], "indent": 4, "text": ["Life Variance"], "role": "item", "attrs": {"channels": "/lifevar"}, "extent": [8334, 8353], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [8541, 8854], "text": ["Rather than have the particles all be created with an age of 0, they are created with a random age within the current timestep. They will also be moved by their starting velocity times this age.  This is useful when adding high velocity particles from emitters as it won\u2019t generate clumps on each frame."]}], "indent": 4, "text": ["Jitter Birth Time"], "role": "item", "extent": [8518, 8541], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [8878, 9717], "text": ["The source can also be interpolated linearly to better birth particles from fast moving sources.  This uses the ", {"text": ["Jitter Birth Time"], "type": "ui"}, " to decide where in the source to interpolate.  If you are wiring your source into the post solve, the ", {"text": ["Positive"], "type": "ui"}, "  birth time and ", {"text": ["Backwards"], "type": "ui"}, " source should be used, which is useful since it does not require future knowledge of the source.  However, to avoid clumping when large forces are present, you should use ", {"text": ["Negative"], "type": "ui"}, " birth time and ", {"text": ["Forward"], "type": "ui"}, " source. This requires you to delete all particles with negative age when rendering.  Alternatively, you can wire into the Pre-Solve, and then use the ", {"text": ["Forward"], "type": "ui"}, " source with ", {"text": ["Negative"], "type": "ui"}, " birth time and not have to worry about seeing particles with negative age.  However, this requires a source that you can compute outside the simulation."]}], "indent": 4, "text": ["Interpolate Source"], "role": "item", "extent": [8854, 8878], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [9743, 10263], "text": ["The ", {"text": ["Interpolate Source"], "type": "code"}, " takes two geometries and has to find a way to determine the in-between values of those geometries.  If point counts and polygons match, the Match Topology option can be used for the most accurate result.  Otherwise, point velocities may be computed with the Trail SOP and then Use Point Velocities selected.  In this latter case, only one of the input geometries is needed, but the Fowrad and Backwards options are still used to determine if the born points lead or trail the object."]}], "indent": 4, "text": ["Interpolation Method"], "role": "item", "extent": [9717, 9743], "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "indent": 0, "level": 2, "text": ["Birth"], "extent": [4007, 4019], "container": true, "type": "h", "id": null}, {"body": [{"indent": 4, "type": "para", "extent": [5421, 5542], "text": ["The parameters on this tab let you control which and how attributes are initialized on\n    the emitted particles. "]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [5561, 5742], "text": ["If the emission type is ", {"text": ["Scatter on Surfaces"], "type": "ui"}, ", and the source is a SOP\n        Path, the initial state of the particles can be set to sliding, stuck,\n        or stopped."]}, {"indent": 8, "type": "para", "extent": [5742, 5861], "text": ["Particles can then be released by setting the ", {"text": ["i@sliding"], "type": "code"}, ", ", {"text": ["i@stuck"], "type": "code"}, ",\n        or ", {"text": ["i@stopped"], "type": "code"}, " attributes to 0."]}], "indent": 4, "text": ["Initial State"], "role": "item", "extent": [5542, 5561], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [5885, 5964], "text": ["This specifies which attributes to inherit from the source geometry."]}], "indent": 4, "text": ["Inherit Attributes"], "role": "item", "extent": [5861, 5885], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [12209, 12252], "text": ["Set or add to velocity attribute."]}], "indent": 4, "text": ["Velocity"], "role": "item", "attrs": {"channels": "/velx /vely /velz"}, "extent": [12157, 12171], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [12304, 12436], "text": ["Variance to velocity set above. The node will add +/- from 0 to this number along each axis to the ", {"text": ["Velocity"], "type": "ui"}, " parameter."]}], "indent": 4, "text": ["Variance"], "role": "item", "attrs": {"channels": "/varx /vary /varz"}, "extent": [12252, 12266], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [12464, 12672], "text": ["By default, the variance (if any) is distributed in a box, the size of which is determined by the ", {"text": ["Variance"], "type": "ui"}, " parameter. When this option is on, the variance is distributed in an ellipsoid instead."]}], "indent": 4, "text": ["Ellipsoid Distribution"], "role": "item", "extent": [12436, 12464], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [12729, 12792], "text": ["Add ID and parent attributes to the created particles."]}], "indent": 4, "text": ["Add ID Attributes"], "role": "item", "extent": [12706, 12729], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Attributes"], "extent": [5404, 5421], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"type": "para", "indent": 8, "extent": [4195, 4420], "text": ["The name of the stream to be generated by this generator.\n        This value is prefixed with ", {"text": ["stream_"], "type": "code"}, " to form a group name\n        that all particles that belong to this logical stream will\n        be made part of."]}], "indent": 4, "text": ["Stream Name"], "role": "item", "extent": [4178, 4195], "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "indent": 0, "level": 2, "text": ["Stream"], "extent": [6056, 6069], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [281, 293], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [6116, 6124], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [29, 95], "text": ["The output of this node should be wired into a solver chain."]}, {"indent": 4, "type": "para", "extent": [95, 159], "text": ["Merge nodes can be used to combine multiple solver chains."]}, {"indent": 4, "type": "para", "extent": [159, 316], "text": ["The final wiring should go into one of the purple inputs of a full-solver, such as ", {"text": ["POP Solver"], "fullpath": "/nodes/dop/popsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/popsolver"}, " or ", {"text": ["FLIP Solver"], "fullpath": "/nodes/dop/flipsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/flipsolver"}, "."]}], "indent": 0, "type": "dt", "extent": [15, 29], "text": ["First Output"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "extent": [6124, 6134], "container": true, "type": "outputs_section", "id": "outputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [29, 325], "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "]}, {"type": "para", "indent": 4, "extent": [325, 519], "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "]}, {"type": "para", "indent": 4, "extent": [519, 692], "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [692, 775], "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "]}, {"type": "para", "indent": 4, "extent": [775, 883], "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."]}], "type": "dt", "indent": 0, "extent": [16, 29], "text": ["channelname"]}, {"body": [{"type": "para", "indent": 4, "extent": [891, 1132], "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."]}], "type": "dt", "indent": 0, "extent": [883, 891], "text": ["DATACT"]}, {"body": [{"type": "para", "indent": 4, "extent": [1140, 1383], "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."]}], "type": "dt", "indent": 0, "extent": [1132, 1140], "text": ["DATACF"]}, {"body": [{"type": "para", "indent": 4, "extent": [1392, 1594], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [1594, 1712], "text": ["In this case, this value is set to the\n    name of the relationship the data to which the data is being attached."]}], "type": "dt", "indent": 0, "extent": [1383, 1392], "text": ["RELNAME"]}, {"body": [{"type": "para", "indent": 4, "extent": [1723, 1925], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [1925, 2128], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."]}], "type": "dt", "indent": 0, "extent": [1712, 1723], "text": ["RELOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "extent": [2141, 2343], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [2343, 2528], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."]}], "type": "dt", "indent": 0, "extent": [2128, 2141], "text": ["RELOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "extent": [2542, 2744], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [2744, 2947], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."]}], "type": "dt", "indent": 0, "extent": [2528, 2542], "text": ["RELAFFOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "extent": [2963, 3165], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [3165, 3350], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."]}], "type": "dt", "indent": 0, "extent": [2947, 2963], "text": ["RELAFFOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "extent": [20, 107], "text": ["This value is the simulation time for which the node is being\n    evaluated. "]}, {"type": "para", "indent": 4, "extent": [107, 326], "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " ", {"text": ["Offset Time"], "type": "ui"}, " and ", {"text": ["Time Scale"], "type": "ui"}, "\n    parameters. "]}, {"type": "para", "indent": 4, "extent": [326, 555], "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"text": ["$ST == 0"], "type": "code"}, " rather than\n    ", {"text": ["$T == 0"], "type": "code"}, " or ", {"text": ["$FF == 1"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "extent": [16, 20], "text": ["ST"]}, {"body": [{"type": "para", "indent": 4, "extent": [559, 700], "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."]}, {"type": "para", "indent": 4, "extent": [700, 999], "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."]}], "type": "dt", "indent": 0, "extent": [555, 559], "text": ["SF"]}, {"body": [{"type": "para", "indent": 4, "extent": [1009, 1181], "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."]}], "type": "dt", "indent": 0, "extent": [999, 1009], "text": ["TIMESTEP"]}, {"body": [{"type": "para", "indent": 4, "extent": [1187, 1305], "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."]}], "type": "dt", "indent": 0, "extent": [1181, 1187], "text": ["SFPS"]}, {"body": [{"type": "para", "indent": 4, "extent": [1312, 1523], "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "]}, {"type": "para", "indent": 4, "extent": [1523, 1621], "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"text": ["object_$SNOBJ"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "extent": [1305, 1312], "text": ["SNOBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [1627, 1859], "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "]}, {"type": "para", "indent": 4, "extent": [1859, 1991], "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [1621, 1627], "text": ["NOBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [1996, 2322], "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "]}, {"type": "para", "indent": 4, "extent": [2322, 2616], "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [1991, 1996], "text": ["OBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [2623, 2883], "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "]}, {"type": "para", "indent": 4, "extent": [2883, 3168], "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "]}, {"type": "para", "indent": 4, "extent": [3168, 3406], "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [2616, 2623], "text": ["OBJID"]}, {"body": [{"type": "para", "indent": 4, "extent": [3417, 3556], "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."]}], "type": "dt", "indent": 0, "extent": [3406, 3417], "text": ["ALLOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "extent": [3569, 3687], "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."]}], "type": "dt", "indent": 0, "extent": [3556, 3569], "text": ["ALLOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "extent": [3694, 3801], "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [3801, 4057], "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"text": ["$ST == $OBJCT"], "type": "code"}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [3687, 3694], "text": ["OBJCT"]}, {"body": [{"type": "para", "indent": 4, "extent": [4064, 4172], "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [4172, 4389], "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [4057, 4064], "text": ["OBJCF"]}, {"body": [{"type": "para", "indent": 4, "extent": [4398, 4486], "text": ["This is a string value containing the name of the object being\n    processed. "]}, {"type": "para", "indent": 4, "extent": [4486, 4748], "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "]}, {"type": "para", "indent": 4, "extent": [4748, 5194], "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named \"myobject\",\n    specifying ", {"text": ["strcmp($OBJNAME, \"myobject\") == 0"], "type": "code"}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [4389, 4398], "text": ["OBJNAME"]}, {"body": [{"type": "para", "indent": 4, "extent": [5202, 5425], "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."]}], "type": "dt", "indent": 0, "extent": [5194, 5202], "text": ["DOPNET"]}], "type": "dt_group", "container": true}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [5431, 5620], "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"text": ["Position node"], "fullpath": "/nodes/dop/position", "scheme": "Node", "type": "link", "value": "/nodes/dop/position"}, ",\n    you could write the expression:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [5620, 5650], "text": ["\n    $tx + 0.1\n    "]}, {"type": "para", "indent": 4, "extent": [5650, 5730], "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."]}], "role": "item", "indent": 0, "extent": [5425, 5431], "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "extent": [6170, 6178], "container": true, "type": "locals_section", "id": "locals"}], "title": ["POP Source"], "summary": ["A POP node that generates particles from geometry."], "attrs": {"version": null, "namespace": null, "internal": "popsource", "context": "dop", "type": "node", "icon": "POP/source"}, "included": ["/nodes/dop/popCommonParms", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_locals", "/nodes/dop/standard_pop_outputs", "/nodes/dop/standard_pop_parms", "/shelf/dynamics_popsource"], "type": "root"}