{"body": [{"indent": 0, "text": ["POP Collision Detect"], "type": "title", "extent": [78, 103], "level": 0}, {"indent": 0, "type": "summary", "extent": [103, 161], "text": ["A POP node that detects and reacts to collisions."]}, {"body": [{"indent": 0, "type": "para", "extent": [176, 332], "text": ["The POP Collision Detect node finds collisions between particles and geometry.  It stores the resulting collision information in a set of hit attributes:"]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [346, 389], "text": ["The cumulative total of particle hits."]}], "indent": 0, "type": "dt", "extent": [332, 346], "text": [{"text": ["i@hittotal"], "type": "code"}]}, {"body": [{"indent": 4, "type": "para", "extent": [401, 466], "text": ["The number of times the particle hit in this detection node."]}], "indent": 0, "type": "dt", "extent": [389, 401], "text": [{"text": ["i@hitnum"], "type": "code"}]}, {"body": [{"indent": 4, "type": "para", "extent": [479, 568], "text": ["A path to the object it hit.  This is an op: path so it can be used directly by VEX."]}], "indent": 0, "type": "dt", "extent": [466, 479], "text": [{"text": ["s@hitpath"], "type": "code"}]}, {"body": [{"indent": 4, "type": "para", "extent": [581, 675], "text": ["The primitive the object hit.  Can be -1 if the specific primitive could not be resolved."]}], "indent": 0, "type": "dt", "extent": [568, 581], "text": [{"text": ["i@hitprim"], "type": "code"}]}, {"body": [{"indent": 4, "type": "para", "extent": [686, 858], "text": ["The parameteric location on the primitive of the hit.  This is not texture uvs.  The ", {"text": ["primuv()"], "type": "code"}, " VEX function can be used to recover information about the hit location."]}], "indent": 0, "type": "dt", "extent": [675, 686], "text": [{"text": ["v@hituv"], "type": "code"}]}, {"body": [{"indent": 4, "type": "para", "extent": [870, 1142], "text": ["The location in space of the collision.  Often does not correspond to the current location of the particle as it usually passes through the collision.  Also may not correspond to the evaluated location of the ", {"text": ["hitpath"], "type": "code"}, " since intra-frame collisions use swept geometry."]}], "indent": 0, "type": "dt", "extent": [858, 870], "text": [{"text": ["v@hitpos"], "type": "code"}]}, {"body": [{"indent": 4, "type": "para", "extent": [1154, 1211], "text": ["The normal of geometry at the time of the collision."]}], "indent": 0, "type": "dt", "extent": [1142, 1154], "text": [{"text": ["v@hitnml"], "type": "code"}]}, {"body": [{"indent": 4, "type": "para", "extent": [1221, 1297], "text": ["The velocity of the geometry at the time and position of the collision."]}], "indent": 0, "type": "dt", "extent": [1211, 1221], "text": [{"text": ["v@hitv"], "type": "code"}]}, {"body": [{"indent": 4, "type": "para", "extent": [1309, 1356], "text": ["When, in seconds, the collision occurred."]}], "indent": 0, "type": "dt", "extent": [1297, 1309], "text": [{"text": ["@hittime"], "type": "code"}]}], "container": true, "type": "dt_group"}, {"indent": 0, "type": "para", "extent": [1356, 1509], "text": ["You can read the hit attributes directly, or use the ", {"text": ["POP Collision Behavior"], "fullpath": "/nodes/dop/popcollisionbehavior", "scheme": "Node", "type": "link", "value": "/nodes/dop/popcollisionbehavior"}, " node to transform them in some common ways."]}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [161, 176], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [1530, 1660], "text": ["For simple RBD collisions, you can use the controls on the ", {"text": ["Collision Behavior"], "type": "ui"}, " tab of the ", {"text": ["POP Solver"], "fullpath": "/nodes/dop/popsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/popsolver"}, "."]}, {"body": [{"indent": 4, "type": "para", "extent": [1873, 1992], "text": ["To avoid this, you can specify the ", {"text": ["Group"], "type": "ui"}, " as ", {"text": ["@stuck=0"], "type": "code"}, ", so the node only affects particles that aren\u2019t stuck."]}], "indent": 0, "text": ["This node detects collisions of all particles in the ", {"text": ["Group"], "type": "ui"}, " field, ", {"text": ["even if they already collided"], "type": "em"}, ". So if you're sticking particles, this node will update the ", {"text": ["hittime"], "type": "code"}, " of stuck particles at each time step."], "extent": [1660, 1873], "blevel": 2, "type": "bullet"}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1992, 2175], "text": ["In SOP mode, this node only supports collisions with triangles and quads. You can detect collisions with SDFs using the Relationship or DOP Objects and pointing to Static Objects."]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [2175, 2352], "text": ["This does not handle dynamic collision response, such as bouncing. Instead, ", {"text": ["static"], "fullpath": "/nodes/dop/staticobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/staticobject"}, " or ", {"text": ["RBD objects"], "fullpath": "/nodes/dop/rbdobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdobject"}, " should be added to the system."]}], "container": true, "type": "bullet_group"}, {"indent": 0, "type": "para", "extent": [2352, 2548], "text": ["This operator modifies the ", {"text": ["hitnum"], "type": "code"}, ", ", {"text": ["hitpath"], "type": "code"}, ", ", {"text": ["hitprim"], "type": "code"}, ", ", {"text": ["hituv"], "type": "code"}, ", ", {"text": ["hitv"], "type": "code"}, ", ", {"text": ["hitpos"], "type": "code"}, ", ", {"text": ["hitnml"], "type": "code"}, ", ", {"text": ["hittime"], "type": "code"}, ", ", {"text": ["P"], "type": "code"}, ", ", {"text": ["Cd"], "type": "code"}, ", ", {"text": ["stopped"], "type": "code"}, ", ", {"text": ["stuck"], "type": "code"}, ", ", {"text": ["sliding"], "type": "code"}, ", ", {"text": ["pospath"], "type": "code"}, ", ", {"text": ["posuv"], "type": "code"}, ", and ", {"text": ["posprim"], "type": "code"}, " attributes."]}, {"indent": 0, "type": "para", "extent": [2548, 2622], "text": ["For more information see ", {"text": ["Particle Collisions"], "fullpath": "/dopparticles/collisions", "scheme": null, "type": "link", "value": "/dopparticles/collisions"}, "."]}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "ord", "extent": [593, 782], "text": ["Create a particle system along the curve using the ", {"text": "", "fullpath": "/shelf/POP/location", "scheme": "Icon", "type": "link", "value": "POP/location"}, {"text": ["Location"], "fullpath": "/shelf/dynamics_poplocation", "scheme": null, "type": "link", "value": "/shelf/dynamics_poplocation"}, " or ", {"text": "", "fullpath": "/shelf/POP/source", "scheme": "Icon", "type": "link", "value": "POP/source"}, {"text": ["Source"], "fullpath": "/shelf/dynamics_popsource", "scheme": null, "type": "link", "value": "/shelf/dynamics_popsource"}, " shelf tools."]}, {"indent": 4, "blevel": 6, "type": "ord", "extent": [782, 864], "text": ["Create an object for the ", {"text": ["particle system"], "fullpath": "/dopparticles/index", "scheme": null, "type": "link", "value": "/dopparticles/"}, " to collide with."]}, {"indent": 4, "blevel": 6, "type": "ord", "extent": [864, 983], "text": ["Click the ", {"text": "", "fullpath": "/shelf/POP/collision", "scheme": "Icon", "type": "link", "value": "POP/collision"}, {"text": ["Collision Detect"], "fullpath": "/nodes/dop/popcollisiondetect", "scheme": "Node", "type": "link", "value": "/nodes/dop/popcollisiondetect"}, " tool on the ", {"text": ["Particles"], "type": "ui"}, " tab."]}, {"body": [{"indent": 8, "type": "para", "extent": [1054, 1288], "text": ["For specific parameter help, see the ", {"text": "", "fullpath": "/shelf/POP/collision", "scheme": "Icon", "type": "link", "value": "POP/collision"}, {"text": ["Collision Detect"], "fullpath": "/nodes/dop/popcollisiondetect", "scheme": "Node", "type": "link", "value": "/nodes/dop/popcollisiondetect"}, " node help. You can choose what happens to the particles once they hit using the options on the ", {"text": ["Behavior"], "type": "ui"}, " tab."]}, {"body": [{"body": [{"indent": 16, "type": "para", "extent": [1302, 1600], "text": ["Turn on ", {"text": ["Move to Hit"], "type": "ui"}, " if you want to trigger an effect from a particle\u2019s collision. For example, if you want to birth more particles, you want the particle at the hit location, not where it ended up at the end of the frame. This will move the particle back to it\u2019s hit location."]}], "indent": 8, "role": "item", "type": "note", "extent": [1288, 1302]}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 8, "type": "para", "extent": [1600, 1702], "text": ["In the following example, particles that hit the box are sticking to it and are colored red."]}, {"indent": 8, "type": "para", "extent": [1702, 1760], "text": [{"text": "", "fullpath": "/images/shelf/POPcollision.png", "scheme": "Image", "type": "link", "value": "/images/shelf/POPcollision.png"}]}], "indent": 4, "text": ["Select the object for collision detection and press ", {"keys": ["Enter"], "text": null, "type": "keys"}, "."], "extent": [983, 1054], "blevel": 6, "type": "ord"}], "container": true, "type": "ord_group"}], "indent": 0, "level": 3, "text": ["Using Collision Detect"], "extent": [552, 593], "container": true, "type": "h", "id": "includeme"}], "indent": 0, "level": 2, "text": ["Tips and notes"], "extent": [1509, 1530], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"type": "para", "indent": 8, "extent": [61, 265], "text": ["Turns this node on and off. The node is only active if this\n        value is greater than 0. This is useful to control the effect of\n        this node with an ", {"text": ["expression"], "fullpath": "/expressions/index", "scheme": null, "type": "link", "value": "/expressions/"}, "."]}, {"body": [{"body": [{"type": "para", "indent": 12, "extent": [279, 410], "text": ["This is activation of the node as a whole. You can\u2019t use this parameter to deactivate the node for certain particles."]}], "role": "item", "indent": 8, "extent": [265, 279], "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 4, "text": ["Activation"], "role": "item", "extent": [45, 61], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [421, 648], "text": ["Only affect a group of points (created with, for example, a\n        ", {"text": ["Group POP"], "fullpath": "/nodes/dop/popgroup", "scheme": "Node", "type": "link", "value": "/nodes/dop/popgroup"}, " or ", {"text": ["Collision\n        Detection POP"], "fullpath": "/nodes/dop/popcollisiondetect", "scheme": "Node", "type": "link", "value": "/nodes/dop/popcollisiondetect"}, ") out of all the points in \n        the current stream."]}], "indent": 4, "text": ["Group"], "role": "item", "extent": [410, 421], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1285, 1365], "text": ["Controls if the guide geometry for this node should be shown. "]}, {"body": [{"body": [{"indent": 16, "type": "para", "extent": [1379, 1494], "text": ["Even if it is enabled here, it can also be disabled by using the ", {"text": ["Hidden"], "type": "ui"}, " flag on the DOP Node."]}], "indent": 8, "role": "item", "extent": [1365, 1379], "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "text": ["Guide"], "role": "item", "extent": [1274, 1285], "type": "parameters_item"}], "type": "parameters_item_group", "container": true}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2804, 2971], "text": ["What geometry to do collision detection with.  This must be a quad and tri mesh.  The mesh can be deforming, in which case its connectivity must remain constant."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2989, 3103], "text": ["All DOP Objects with this relationship (as usually defined by Merge DOPs) to this object will be tested."]}], "indent": 4, "type": "dt", "extent": [2971, 2989], "text": ["Relationship"]}, {"body": [{"indent": 8, "type": "para", "extent": [3120, 3201], "text": ["A specific list of DOP objects within ", {"text": ["this"], "type": "em"}, " simulation will be tested."]}], "indent": 4, "type": "dt", "extent": [3103, 3120], "text": ["DOP Objects"]}, {"body": [{"indent": 8, "type": "para", "extent": [3210, 3237], "text": ["Use specific SOP."]}], "indent": 4, "type": "dt", "extent": [3201, 3210], "text": ["SOP"]}, {"body": [{"indent": 8, "type": "para", "extent": [3267, 3325], "text": ["Use one of the SOPs wired into this DOP network."]}], "indent": 4, "type": "dt", "extent": [3237, 3267], "text": ["Use Xth Context Geometry"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Collision Target"], "role": "item", "extent": [2785, 2804], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3339, 3401], "text": ["The type of relationship to do collision detection with."]}], "indent": 0, "text": ["Relationship"], "role": "item", "extent": [3325, 3339], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3414, 3551], "text": ["A list of DOP Objects.  Patterns like ", {"text": ["*"], "type": "code"}, " can be used to match multiple objects.  These refer to objects inside of this simulation."]}], "indent": 0, "text": ["DOP Objects"], "role": "item", "extent": [3401, 3414], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3561, 3608], "text": ["The path to a SOP to fetch geometry from."]}], "indent": 0, "text": ["SOP Path"], "role": "item", "extent": [3551, 3561], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3632, 3906], "text": ["The geometry at the beginning and ending of the particle\u2019s motion will be fetched and swept to allow proper collision during the geometry\u2019s motion.  However, if the geometry has changing point counts this cannot be done, and instead only a single frame should be used."]}], "indent": 0, "text": ["Use Deforming Geometry"], "role": "item", "extent": [3608, 3632], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3929, 4116], "text": ["To allow robust collision detection the particles are treated as finite-sized spheres.  By default ", {"text": ["pscale"], "type": "code"}, " is used, but if the ", {"text": ["pscale"], "type": "code"}, " attribute is missing then this size is used."]}], "indent": 0, "text": ["Default Particle Size"], "role": "item", "extent": [3906, 3929], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Collision"], "extent": [2769, 2785], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [4149, 4695], "text": ["Normally the hit attribute, ", {"text": ["@numhit"], "type": "code"}, ", will be zeroed out before collision detection is performed.  If this is set, it will not be cleared, allowing you to count the total number of hits over a lifetime of a particle.  However, this will cause the other options, such as ", {"text": ["Group"], "type": "ui"}, ", to continue to see the particle as hitting every frame since they use this variable to detect if any hits occurred.  Another option is to use a ", {"text": ["POP Wrangle"], "fullpath": "/nodes/dop/popwrangle", "scheme": "Node", "type": "link", "value": "/nodes/dop/popwrangle"}, " with ", {"text": ["i@totalhit += i@numhit;"], "type": "code"}, " to create a total hit attribute that accumulates."]}], "indent": 0, "text": ["Accumulate Hits"], "role": "item", "extent": [4131, 4149], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4707, 4786], "text": ["All particles that just hit, ie, ", {"text": ["@numhit>0"], "type": "code"}, ", will be added to this group."]}], "indent": 0, "text": ["Group Name"], "role": "item", "extent": [4695, 4707], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4802, 4999], "text": ["If the group isn\u2019t preserved, it is cleared out first so the only particles in the group will be those that just hit. If it is preserved, the group will accumulate all particles that ever hit."]}], "indent": 0, "text": ["Preserve Group"], "role": "item", "extent": [4786, 4802], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5011, 5142], "text": ["Particles that are just hit will have their ", {"text": ["Cd"], "type": "code"}, " attribute set to this value.  This is useful for quick visualization of hits."]}], "indent": 0, "text": ["Color Hits"], "role": "item", "extent": [4999, 5011], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5157, 5258], "text": ["Adds to the integer ", {"text": ["hittotal"], "type": "code"}, " attribute any hits that occurred due to this collision detection."]}], "indent": 0, "text": ["Add Hit Total"], "role": "item", "extent": [5142, 5157], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5271, 5560], "text": ["Often if you want to trigger an effect off a particle\u2019s collision, such as birthing more particles, you want the particle at its hit location, not where it ended up at the\n    end of the frame.  This will move the particle back to its hit location.  This consists of ", {"text": ["@P = v@hitpos;"], "type": "code"}]}], "indent": 0, "text": ["Move to Hit"], "role": "item", "extent": [5258, 5271], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5570, 5614], "text": ["What happens to particles that collide"]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [5623, 5747], "text": ["Particles that hit will set the ", {"text": ["dead"], "type": "code"}, " attribute to 1, causing them to be deleted during the reaping pass."]}], "indent": 4, "type": "dt", "extent": [5614, 5623], "text": ["Die"]}, {"body": [{"indent": 8, "type": "para", "extent": [5757, 6031], "text": ["This sets the ", {"text": ["stopped"], "type": "code"}, " attribute to 1.  Particles that stop will no longer integrate their velocity, position, orientation, or angular velocity.  They can still be moved directly. For example, by the ", {"text": ["Look At POP"], "fullpath": "/nodes/dop/poplookat", "scheme": "Node", "type": "link", "value": "/nodes/dop/poplookat"}, " in instantaneous mode."]}], "indent": 4, "type": "dt", "extent": [5747, 5757], "text": ["Stop"]}, {"body": [{"indent": 8, "type": "para", "extent": [6042, 6364], "text": ["Particles that hit will have the ", {"text": ["stuck"], "type": "code"}, " attribute set to 1.  The ", {"text": ["pospath"], "type": "code"}, ", ", {"text": ["posprim"], "type": "code"}, ", and ", {"text": ["posuv"], "type": "code"}, " attributes will be setup to point to the hit location, causing the integrator to keep moving the particles to their stuck location every frame.  Usually you also want to turn on ", {"text": ["Move to Hit"], "type": "ui"}, " with this."]}, {"indent": 8, "type": "para", "extent": [6364, 6607], "text": ["This node will continue to consider stuck particles as \"colliding\" and update the attributes at each time step. To avoid this, you can specify the ", {"text": ["Group"], "type": "ui"}, " as ", {"text": ["@stuck=0"], "type": "code"}, ", so the node only affects particles that aren\u2019t stuck."]}], "indent": 4, "type": "dt", "extent": [6031, 6042], "text": ["Stick"]}, {"body": [{"indent": 8, "type": "para", "extent": [6618, 6864], "text": ["Particles that hit will have the ", {"text": ["sliding"], "type": "code"}, " attribute set to 1.  The ", {"text": ["pospath"], "type": "code"}, ", ", {"text": ["posprim"], "type": "code"}, ", and ", {"text": ["posuv"], "type": "code"}, " attributes will be setup to point to the hit location, causing the integrator to try to slide the particles along the surface."]}, {"indent": 8, "type": "para", "extent": [6864, 7046], "text": ["You can also use the ", {"text": ["Cling"], "type": "ui"}, " attribute on the ", {"text": ["POP Property"], "fullpath": "/nodes/dop/popproperty", "scheme": "Node", "type": "link", "value": "/nodes/dop/popproperty"}, " node to set how much the particles will cling to the object they are sliding on."]}], "indent": 4, "type": "dt", "extent": [6607, 6618], "text": ["Slide"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Response"], "role": "item", "extent": [5560, 5570], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Behavior"], "extent": [4116, 4131], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [7089, 7222], "text": ["Adds the integer attribute ", {"text": ["hittotal"], "type": "code"}, " that stores the cumulative total number of times the particle has collided with anything."]}], "indent": 0, "text": ["Add Hit Total Attribute"], "role": "item", "extent": [7063, 7089], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7245, 7369], "text": ["Adds the integer attribute ", {"text": ["hitnum"], "type": "code"}, " that stores the number of times the particle has collided in this particular node."]}], "indent": 0, "text": ["Add Hit Num Attribute"], "role": "item", "extent": [7222, 7245], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7392, 7485], "text": ["Adds the vector attribute ", {"text": ["hitpos"], "type": "code"}, " that stores the position that the particle collided."]}], "indent": 0, "text": ["Add Hit Pos Attribute"], "role": "item", "extent": [7369, 7392], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7511, 7620], "text": ["Adds the vector attribute ", {"text": ["hitnml"], "type": "code"}, " that stores the normal of the geometry at the time of the collision."]}], "indent": 0, "text": ["Add Hit Normal Attribute"], "role": "item", "extent": [7485, 7511], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7648, 7906], "text": ["Adds the vector attribute ", {"text": ["hitv"], "type": "code"}, " that stores the velocity\n    of the geometry at the time of the collision.  For SDF collisions\n    this will use the point velocity, so either point numbers should\n    be consistent or point velocity attributes present."]}], "indent": 0, "text": ["Add Hit Velocity Attribute"], "role": "item", "extent": [7620, 7648], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7930, 8020], "text": ["Adds the float attribute ", {"text": ["hittime"], "type": "code"}, " that stores the time in seconds of the collision."]}], "indent": 0, "text": ["Add Hit Time Attribute"], "role": "item", "extent": [7906, 7930], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8044, 8172], "text": ["Adds the string attribute ", {"text": ["hitpath"], "type": "code"}, " that stores the object that the particle collided.  This is an op: path usable in VEX."]}], "indent": 0, "text": ["Add Hit Path Attribute"], "role": "item", "extent": [8020, 8044], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8196, 8328], "text": ["Adds the integer attribute ", {"text": ["hitprim"], "type": "code"}, " that stores the primitive hit by the particle.  -1 if the primitive cannot be determined."]}], "indent": 0, "text": ["Add Hit Prim Attribute"], "role": "item", "extent": [8172, 8196], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8350, 8486], "text": ["Adds the vector attribute ", {"text": ["hituv"], "type": "code"}, " that stores the parametric coordinates of where the primitive was hit.  This is not texture UVs."]}], "indent": 0, "text": ["Add Hit UV Attribute"], "role": "item", "extent": [8328, 8350], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Attributes"], "extent": [7046, 7063], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [694, 879], "text": ["The name of the simulation data to apply the POP node to.\n        This commonly is Geometry, but POP Networks can be designed\n        to apply to different geometry if desired."]}], "indent": 4, "text": ["Geometry"], "role": "item", "extent": [680, 694], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [905, 1245], "text": ["For nodes with local expressions, this controls where ", {"text": ["ch()"], "type": "code"}, "\n        style expressions in VEX are evaluated with respect to.  By\n        making this ", {"text": ["."], "type": "code"}, ", you can ensure relative references work.\n        It is important to promote this if you are embedding a node inside\n        an HDA you are also exporting the local expressions."]}], "indent": 4, "text": ["Evaluation Node Path"], "role": "item", "extent": [879, 905], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Bindings"], "extent": [8486, 8501], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [2672, 2684], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [28, 71], "text": ["This optional input has two purposes."]}, {"type": "para", "indent": 4, "extent": [71, 230], "text": ["First, if it is wired to other POP nodes, they will be executed prior to this node executing.  The chain of nodes will be processed in a top-down manner."]}, {"type": "para", "indent": 4, "extent": [230, 465], "text": ["Second, if the input chain has a stream generator (such as ", {"text": ["POP Location"], "fullpath": "/nodes/dop/poplocation", "scheme": "Node", "type": "link", "value": "/nodes/dop/poplocation"}, ",\n    ", {"text": ["POP Source"], "fullpath": "/nodes/dop/popsource", "scheme": "Node", "type": "link", "value": "/nodes/dop/popsource"}, ", or ", {"text": ["POP Stream"], "fullpath": "/nodes/dop/popstream", "scheme": "Node", "type": "link", "value": "/nodes/dop/popstream"}, "), this node will only operate on the particles in that stream."]}], "type": "dt", "indent": 0, "extent": [15, 28], "text": ["First Input"]}], "type": "dt_group", "container": true}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [8547, 8555], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [29, 95], "text": ["The output of this node should be wired into a solver chain."]}, {"type": "para", "indent": 4, "extent": [95, 159], "text": ["Merge nodes can be used to combine multiple solver chains."]}, {"type": "para", "indent": 4, "extent": [159, 316], "text": ["The final wiring should go into one of the purple inputs of a full-solver, such as ", {"text": ["POP Solver"], "fullpath": "/nodes/dop/popsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/popsolver"}, " or ", {"text": ["FLIP Solver"], "fullpath": "/nodes/dop/flipsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/flipsolver"}, "."]}], "type": "dt", "indent": 0, "extent": [15, 29], "text": ["First Output"]}], "type": "dt_group", "container": true}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "extent": [8587, 8596], "container": true, "type": "outputs_section", "id": "outputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [29, 325], "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "]}, {"type": "para", "indent": 4, "extent": [325, 519], "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "]}, {"type": "para", "indent": 4, "extent": [519, 692], "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [692, 775], "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "]}, {"type": "para", "indent": 4, "extent": [775, 883], "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."]}], "type": "dt", "indent": 0, "extent": [16, 29], "text": ["channelname"]}, {"body": [{"type": "para", "indent": 4, "extent": [891, 1132], "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."]}], "type": "dt", "indent": 0, "extent": [883, 891], "text": ["DATACT"]}, {"body": [{"type": "para", "indent": 4, "extent": [1140, 1383], "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."]}], "type": "dt", "indent": 0, "extent": [1132, 1140], "text": ["DATACF"]}, {"body": [{"type": "para", "indent": 4, "extent": [1392, 1594], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [1594, 1712], "text": ["In this case, this value is set to the\n    name of the relationship the data to which the data is being attached."]}], "type": "dt", "indent": 0, "extent": [1383, 1392], "text": ["RELNAME"]}, {"body": [{"type": "para", "indent": 4, "extent": [1723, 1925], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [1925, 2128], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."]}], "type": "dt", "indent": 0, "extent": [1712, 1723], "text": ["RELOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "extent": [2141, 2343], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [2343, 2528], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."]}], "type": "dt", "indent": 0, "extent": [2128, 2141], "text": ["RELOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "extent": [2542, 2744], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [2744, 2947], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."]}], "type": "dt", "indent": 0, "extent": [2528, 2542], "text": ["RELAFFOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "extent": [2963, 3165], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [3165, 3350], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."]}], "type": "dt", "indent": 0, "extent": [2947, 2963], "text": ["RELAFFOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "extent": [20, 107], "text": ["This value is the simulation time for which the node is being\n    evaluated. "]}, {"type": "para", "indent": 4, "extent": [107, 326], "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " ", {"text": ["Offset Time"], "type": "ui"}, " and ", {"text": ["Time Scale"], "type": "ui"}, "\n    parameters. "]}, {"type": "para", "indent": 4, "extent": [326, 555], "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"text": ["$ST == 0"], "type": "code"}, " rather than\n    ", {"text": ["$T == 0"], "type": "code"}, " or ", {"text": ["$FF == 1"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "extent": [16, 20], "text": ["ST"]}, {"body": [{"type": "para", "indent": 4, "extent": [559, 700], "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."]}, {"type": "para", "indent": 4, "extent": [700, 999], "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."]}], "type": "dt", "indent": 0, "extent": [555, 559], "text": ["SF"]}, {"body": [{"type": "para", "indent": 4, "extent": [1009, 1181], "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."]}], "type": "dt", "indent": 0, "extent": [999, 1009], "text": ["TIMESTEP"]}, {"body": [{"type": "para", "indent": 4, "extent": [1187, 1305], "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."]}], "type": "dt", "indent": 0, "extent": [1181, 1187], "text": ["SFPS"]}, {"body": [{"type": "para", "indent": 4, "extent": [1312, 1523], "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "]}, {"type": "para", "indent": 4, "extent": [1523, 1621], "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"text": ["object_$SNOBJ"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "extent": [1305, 1312], "text": ["SNOBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [1627, 1859], "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "]}, {"type": "para", "indent": 4, "extent": [1859, 1991], "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [1621, 1627], "text": ["NOBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [1996, 2322], "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "]}, {"type": "para", "indent": 4, "extent": [2322, 2616], "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [1991, 1996], "text": ["OBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [2623, 2883], "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "]}, {"type": "para", "indent": 4, "extent": [2883, 3168], "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "]}, {"type": "para", "indent": 4, "extent": [3168, 3406], "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [2616, 2623], "text": ["OBJID"]}, {"body": [{"type": "para", "indent": 4, "extent": [3417, 3556], "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."]}], "type": "dt", "indent": 0, "extent": [3406, 3417], "text": ["ALLOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "extent": [3569, 3687], "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."]}], "type": "dt", "indent": 0, "extent": [3556, 3569], "text": ["ALLOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "extent": [3694, 3801], "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [3801, 4057], "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"text": ["$ST == $OBJCT"], "type": "code"}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [3687, 3694], "text": ["OBJCT"]}, {"body": [{"type": "para", "indent": 4, "extent": [4064, 4172], "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [4172, 4389], "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [4057, 4064], "text": ["OBJCF"]}, {"body": [{"type": "para", "indent": 4, "extent": [4398, 4486], "text": ["This is a string value containing the name of the object being\n    processed. "]}, {"type": "para", "indent": 4, "extent": [4486, 4748], "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "]}, {"type": "para", "indent": 4, "extent": [4748, 5194], "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named \"myobject\",\n    specifying ", {"text": ["strcmp($OBJNAME, \"myobject\") == 0"], "type": "code"}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [4389, 4398], "text": ["OBJNAME"]}, {"body": [{"type": "para", "indent": 4, "extent": [5202, 5425], "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."]}], "type": "dt", "indent": 0, "extent": [5194, 5202], "text": ["DOPNET"]}], "type": "dt_group", "container": true}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [5431, 5620], "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"text": ["Position node"], "fullpath": "/nodes/dop/position", "scheme": "Node", "type": "link", "value": "/nodes/dop/position"}, ",\n    you could write the expression:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [5620, 5650], "text": ["\n    $tx + 0.1\n    "]}, {"type": "para", "indent": 4, "extent": [5650, 5730], "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."]}], "role": "item", "indent": 0, "extent": [5425, 5431], "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "extent": [8629, 8637], "container": true, "type": "locals_section", "id": "locals"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [8706, 8739], "text": [{"text": "", "fullpath": "/nodes/dop/popcollisiondetect", "scheme": "Node", "type": "link", "value": "/nodes/dop/popcollisiondetect"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [8697, 8706], "container": true, "type": "related_section", "id": "related"}], "title": ["POP Collision Detect"], "summary": ["A POP node that detects and reacts to collisions."], "attrs": {"version": null, "namespace": null, "internal": "popcollisiondetect", "context": "dop", "type": "node", "icon": "POP/collision"}, "included": ["/nodes/dop/standard_data_locals", "/nodes/dop/standard_locals", "/nodes/dop/standard_pop_inputs", "/nodes/dop/standard_pop_outputs", "/nodes/dop/standard_pop_parms", "/shelf/dynamics_popcollision"], "type": "root"}