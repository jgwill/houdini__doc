{"body": [{"indent": 0, "text": ["POP Replicate"], "type": "title", "extent": [68, 86], "level": 0}, {"indent": 0, "type": "summary", "extent": [86, 155], "text": ["A POP Node that generates particles from incoming particles."]}, {"indent": 0, "type": "para", "extent": [155, 288], "text": ["POP Replicate node designed generate particles for a POP network.  It does this by replicating given particles in the input stream."]}, {"indent": 0, "type": "para", "extent": [288, 403], "text": ["It uses the up-stream set of particles to generate a new stream of particles by replicating the source particles."]}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "ord", "extent": [358, 567], "text": ["Create a ", {"text": "", "fullpath": "/shelf/SOP/particle", "scheme": "Icon", "type": "link", "value": "SOP/particle"}, {"text": ["particle system"], "fullpath": "/dopparticles/index", "scheme": null, "type": "link", "value": "/dopparticles/"}, " using the ", {"text": "", "fullpath": "/shelf/POP/location", "scheme": "Icon", "type": "link", "value": "POP/location"}, {"text": ["Location"], "fullpath": "/shelf/dynamics_poplocation", "scheme": null, "type": "link", "value": "/shelf/dynamics_poplocation"}, " or ", {"text": "", "fullpath": "/shelf/POP/source", "scheme": "Icon", "type": "link", "value": "POP/source"}, {"text": ["Source"], "fullpath": "/shelf/dynamics_popsource", "scheme": null, "type": "link", "value": "/shelf/dynamics_popsource"}, " shelf tools."]}, {"body": [{"indent": 12, "type": "para", "extent": [661, 759], "text": ["The particle system will attach itself to the particle system you have selected."]}], "indent": 4, "text": ["Click ", {"text": "", "fullpath": "/shelf/POP/split", "scheme": "Icon", "type": "link", "value": "POP/split"}, {"text": ["Replicate"], "fullpath": "/nodes/dop/popreplicate", "scheme": "Node", "type": "link", "value": "/nodes/dop/popreplicate"}, " on the ", {"text": ["Particles"], "type": "ui"}, " tab. "], "extent": [567, 661], "blevel": 6, "type": "ord"}, {"indent": 4, "blevel": 6, "type": "ord", "extent": [759, 866], "text": ["Click ", {"text": "", "fullpath": "/shelf/PLAYBAR/play_forward", "scheme": "Icon", "type": "link", "value": "PLAYBAR/play_forward"}, " play on the ", {"text": ["playbar"], "fullpath": "/anim/playbar", "scheme": null, "type": "link", "value": "/anim/playbar"}, " to see the particles."]}], "container": true, "type": "ord_group"}, {"indent": 4, "type": "para", "extent": [866, 911], "text": [{"text": "", "fullpath": "/images/shelf/split.png", "scheme": "Image", "type": "link", "value": "/images/shelf/split.png"}]}], "indent": 0, "level": 2, "text": ["Using Replicate"], "extent": [324, 358], "container": true, "type": "h", "id": "includeme"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 8, "extent": [91, 279], "text": ["Turns this node on and off. The node is only active if this value is greater than 0. This is useful to control the effect of this node with an ", {"text": ["expression"], "fullpath": "/expressions/index", "scheme": null, "type": "link", "value": "/expressions/"}, "."]}, {"body": [{"body": [{"type": "para", "indent": 16, "extent": [293, 428], "text": ["This is activation of the node as a whole. You can\u2019t use this parameter to deactivate the node for certain particles."]}], "role": "item", "indent": 8, "extent": [279, 293], "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 4, "text": ["Activation"], "role": "item", "attrs": {"channels": "/activate"}, "extent": [45, 61], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 8, "extent": [439, 737], "text": ["Only affect a group of points out of all the points in the input. If not specified, this will only affect the points in the current stream.  The current stream is found by walking up the chain of nodes until a node with the ", {"text": ["streamname"], "type": "code"}, " parameter is found, then that ", {"text": ["streamname"], "type": "code"}, " is used."]}], "indent": 4, "text": ["Group"], "role": "item", "extent": [428, 439], "type": "parameters_item"}], "type": "parameters_item_group", "container": true}, {"body": [{"indent": 0, "type": "para", "extent": [516, 622], "text": ["This operator has two methods for emitting particles. You can use these methods together or separately:"]}, {"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [622, 699], "text": [{"text": ["Impulse"], "type": "strong"}, " creates a certain number of particles each time the node cooks."]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [699, 763], "text": [{"text": ["Constant"], "type": "strong"}, " creates a certain number of particles per second."]}], "container": true, "type": "bullet_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [7307, 7507], "text": ["Turns ", {"text": ["impulse"], "type": "em"}, " emission on and off. Impulse emits the number of particles in the ", {"text": ["Impulse Birth Rate"], "type": "ui"}, " below each time the operator cooks. A value of 0 means off, any other value means on."]}], "indent": 4, "text": ["Impulse Activation"], "role": "item", "attrs": {"channels": "/impulseactivate"}, "extent": [7246, 7270], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [7559, 7658], "text": ["Number of particles to emit each time the node cooks (when ", {"text": ["Impulse activation"], "type": "ui"}, " is on)."]}], "indent": 4, "text": ["Impulse Count"], "role": "item", "attrs": {"channels": "/impulserate"}, "extent": [7507, 7526], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [7718, 7903], "text": ["Turns ", {"text": ["constant"], "type": "em"}, " emission on and off. Impulse emits the number of particles in the ", {"text": ["Constant birth rate"], "type": "ui"}, " below each second. A value of 0 means off, any other value means on."]}], "indent": 4, "text": ["Const. Activation"], "role": "item", "attrs": {"channels": "/impulseactivate"}, "extent": [7658, 7681], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [7959, 8046], "text": ["Number of particles to emit per second (when ", {"text": ["Constant  Activation"], "type": "ui"}, " is on)."]}], "indent": 4, "text": ["Const. Birth Rate"], "role": "item", "attrs": {"channels": "/impulserate"}, "extent": [7903, 7926], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}, {"indent": 0, "type": "para", "extent": [811, 1093], "text": ["Emit from Attribute:\nA specified attribute can be used to control whether a point is replicated or not.  This attribute should be a float value to represent the probability of replicating the source point.\nAttribute:\nThe name of the attribute to use for controlling emission rate."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [8096, 8232], "text": ["Name of a group to put the new points into.  The particles will only be in this group the same substep that they were created."]}], "indent": 4, "text": ["Just Born Group"], "role": "item", "extent": [8075, 8096], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [8279, 8334], "text": ["How long the particle will live (in seconds)."]}], "indent": 4, "text": ["Life Expectancy"], "role": "item", "attrs": {"channels": "/life"}, "extent": [8232, 8253], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [8382, 8518], "text": ["Particles will live the number of seconds in ", {"text": ["Life Expectancy"], "type": "ui"}, ", plus or minus this number of seconds. Use 0 for no variance."]}], "indent": 4, "text": ["Life Variance"], "role": "item", "attrs": {"channels": "/lifevar"}, "extent": [8334, 8353], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [8541, 8854], "text": ["Rather than have the particles all be created with an age of 0, they are created with a random age within the current timestep. They will also be moved by their starting velocity times this age.  This is useful when adding high velocity particles from emitters as it won\u2019t generate clumps on each frame."]}], "indent": 4, "text": ["Jitter Birth Time"], "role": "item", "extent": [8518, 8541], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [8878, 9717], "text": ["The source can also be interpolated linearly to better birth particles from fast moving sources.  This uses the ", {"text": ["Jitter Birth Time"], "type": "ui"}, " to decide where in the source to interpolate.  If you are wiring your source into the post solve, the ", {"text": ["Positive"], "type": "ui"}, "  birth time and ", {"text": ["Backwards"], "type": "ui"}, " source should be used, which is useful since it does not require future knowledge of the source.  However, to avoid clumping when large forces are present, you should use ", {"text": ["Negative"], "type": "ui"}, " birth time and ", {"text": ["Forward"], "type": "ui"}, " source. This requires you to delete all particles with negative age when rendering.  Alternatively, you can wire into the Pre-Solve, and then use the ", {"text": ["Forward"], "type": "ui"}, " source with ", {"text": ["Negative"], "type": "ui"}, " birth time and not have to worry about seeing particles with negative age.  However, this requires a source that you can compute outside the simulation."]}], "indent": 4, "text": ["Interpolate Source"], "role": "item", "extent": [8854, 8878], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [9743, 10263], "text": ["The ", {"text": ["Interpolate Source"], "type": "code"}, " takes two geometries and has to find a way to determine the in-between values of those geometries.  If point counts and polygons match, the Match Topology option can be used for the most accurate result.  Otherwise, point velocities may be computed with the Trail SOP and then Use Point Velocities selected.  In this latter case, only one of the input geometries is needed, but the Fowrad and Backwards options are still used to determine if the born points lead or trail the object."]}], "indent": 4, "text": ["Interpolation Method"], "role": "item", "extent": [9717, 9743], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}, {"indent": 0, "type": "para", "extent": [1131, 1273], "text": ["Kill Original Particle:\nWhen a particle is replicated it will be flagged for deletion, avoiding having the particle constantly be recreated."]}, {"indent": 0, "type": "para", "extent": [1273, 1597], "text": ["Jitter Birth Time:\nRather than have the particles all be created with an age of 0, they are created with a random age within the current timestep. They will also be moved by their starting velocity times this age.  This is useful when adding high velocity particles from emitters as it won\u2019t generate clumps on each frame."]}, {"indent": 0, "type": "para", "extent": [1597, 1863], "text": ["Interpolate Source:\nIf set, the birth location will be rolled back according to the source particle\u2019s velocity and the jittered birth time of the new particle.  This allows all the particles born to be born at different times and places from the original particle."]}], "indent": 0, "level": 2, "text": ["Birth"], "extent": [504, 516], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [1891, 1982], "text": ["The shape of the generated point cloud before transformation to each input point."]}], "indent": 0, "text": ["Shape"], "role": "item", "extent": [1883, 1891], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1995, 2067], "text": ["The spatial orientation in local space for 2-D and 1-D shapes."]}], "indent": 0, "text": ["Orientation"], "role": "item", "extent": [1982, 1995], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2075, 2283], "text": ["The local center of the point cloud.  For example, increasing the center ", {"text": ["Z"], "type": "ui"}, " parameter moves the cloud further along the alignment  vector from the input point (usually the ", {"text": ["N"], "type": "code"}, " or ", {"text": ["v"], "type": "code"}, " attributes)."]}], "indent": 0, "text": ["Center"], "role": "item", "extent": [2067, 2075], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2289, 2333], "text": ["The local size of the point cloud."]}], "indent": 0, "text": ["Size"], "role": "item", "extent": [2283, 2289], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2348, 2478], "text": ["A uniform factor applied to the replicated point cloud scale, in addition to any scaling attributes on the input points."]}], "indent": 0, "text": ["Uniform Scale"], "role": "item", "extent": [2333, 2348], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2496, 2675], "text": ["Apply an additional scale along the local Z-axis according to the speed of the input point, effectively stretching the replicated point cloud along the alignment vector."]}, {"body": [{"body": [{"indent": 16, "type": "para", "extent": [2689, 2733], "text": ["Do not stretch by velocity."]}], "indent": 8, "type": "dt", "extent": [2675, 2689], "text": ["None"]}, {"body": [{"indent": 16, "type": "para", "extent": [2749, 2831], "text": ["Apply on top of any existing scale factors from the input points."]}], "indent": 8, "type": "dt", "extent": [2733, 2749], "text": ["Scaled"]}, {"body": [{"indent": 16, "type": "para", "extent": [2862, 3091], "text": ["Ignore any scaling from the input points and use only the  ", {"text": ["Velocity Scale"], "type": "ui"}, ".  This setting is useful if you want to ignore any variations in the ", {"text": ["pscale"], "type": "code"}, " attribute of the input points when scaling by velocity."]}], "indent": 8, "type": "dt", "extent": [2831, 2862], "text": ["Ignore Geometry Scale"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Velocity Stretch"], "role": "item", "extent": [2478, 2496], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3107, 3188], "text": ["A scale applied to the input point speed before stretching by velocity."]}], "indent": 0, "text": ["Velocity Scale"], "role": "item", "extent": [3091, 3107], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3194, 3253], "text": ["The seed used to generate random particle clouds."]}], "indent": 0, "text": ["Seed"], "role": "item", "extent": [3188, 3194], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3280, 3416], "text": ["Use stratified sampling for a better spatial distribution of points within the random clouds, at a slight performance penalty."]}], "indent": 0, "text": ["Quasi-Stratified Sampling"], "role": "item", "extent": [3253, 3280], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Shape"], "extent": [1863, 1883], "container": true, "type": "h", "id": "shape"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [3448, 3584], "text": ["Add noise to the replicated point cloud in local space.  The noise will respect the input point\u2019s ", {"text": ["rest"], "type": "code"}, " attribute if present."]}], "indent": 0, "text": ["Add Noise"], "role": "item", "extent": [3436, 3448], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3596, 3631], "text": ["Specifies the noise type."]}], "indent": 0, "text": ["Noise Type"], "role": "item", "extent": [3584, 3596], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3642, 3720], "text": ["The scale of the noise. Decreasing frequency increases feature size."]}], "indent": 0, "text": ["Frequency"], "role": "item", "extent": [3631, 3642], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3728, 3799], "text": ["Allows the noise field to be effectively moved through space."]}], "indent": 0, "text": ["Offset"], "role": "item", "extent": [3720, 3728], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3810, 3847], "text": ["The amplitude of the noise."]}], "indent": 0, "text": ["Amplitude"], "role": "item", "extent": [3799, 3810], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3858, 3932], "text": ["The amplitude reduction of higher frequency noise contributions."]}], "indent": 0, "text": ["Roughness"], "role": "item", "extent": [3847, 3858], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3945, 3994], "text": ["Raises the noise to the given exponent."]}], "indent": 0, "text": ["Attenuation"], "role": "item", "extent": [3932, 3945], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4006, 4055], "text": ["The number of noise generations to use."]}], "indent": 0, "text": ["Turbulence"], "role": "item", "extent": [3994, 4006], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Noise"], "extent": [3416, 3436], "container": true, "type": "h", "id": "noise"}, {"body": [{"indent": 0, "type": "para", "extent": [4072, 4185], "text": ["The parameters on this tab let you control which and how attributes are initialized on the emitted particles. "]}, {"indent": 0, "type": "para", "extent": [4185, 4258], "text": ["Inherit Attributes:\nWhich attributes to inherit from the source stream."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [12209, 12252], "text": ["Set or add to velocity attribute."]}], "indent": 4, "text": ["Velocity"], "role": "item", "attrs": {"channels": "/velx /vely /velz"}, "extent": [12157, 12171], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [12304, 12436], "text": ["Variance to velocity set above. The node will add +/- from 0 to this number along each axis to the ", {"text": ["Velocity"], "type": "ui"}, " parameter."]}], "indent": 4, "text": ["Variance"], "role": "item", "attrs": {"channels": "/varx /vary /varz"}, "extent": [12252, 12266], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [12464, 12672], "text": ["By default, the variance (if any) is distributed in a box, the size of which is determined by the ", {"text": ["Variance"], "type": "ui"}, " parameter. When this option is on, the variance is distributed in an ellipsoid instead."]}], "indent": 4, "text": ["Ellipsoid Distribution"], "role": "item", "extent": [12436, 12464], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [12729, 12792], "text": ["Add ID and parent attributes to the created particles."]}], "indent": 4, "text": ["Add ID Attributes"], "role": "item", "extent": [12706, 12729], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Attributes"], "extent": [4055, 4072], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"type": "para", "indent": 8, "extent": [4195, 4420], "text": ["The name of the stream to be generated by this generator.\n        This value is prefixed with ", {"text": ["stream_"], "type": "code"}, " to form a group name\n        that all particles that belong to this logical stream will\n        be made part of."]}], "type": "dt", "indent": 4, "extent": [4178, 4195], "text": ["Stream Name"]}], "type": "dt_group", "container": true}], "indent": 0, "tag": "parameters", "attrs": {"id": "streamParms"}, "extent": [4148, 4178], "type": "pxml"}], "indent": 0, "level": 2, "text": ["Stream"], "extent": [4342, 4355], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [453, 465], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [28, 71], "text": ["This optional input has two purposes."]}, {"type": "para", "indent": 4, "extent": [71, 230], "text": ["First, if it is wired to other POP nodes, they will be executed prior to this node executing.  The chain of nodes will be processed in a top-down manner."]}, {"type": "para", "indent": 4, "extent": [230, 465], "text": ["Second, if the input chain has a stream generator (such as ", {"text": ["POP Location"], "fullpath": "/nodes/dop/poplocation", "scheme": "Node", "type": "link", "value": "/nodes/dop/poplocation"}, ",\n    ", {"text": ["POP Source"], "fullpath": "/nodes/dop/popsource", "scheme": "Node", "type": "link", "value": "/nodes/dop/popsource"}, ", or ", {"text": ["POP Stream"], "fullpath": "/nodes/dop/popstream", "scheme": "Node", "type": "link", "value": "/nodes/dop/popstream"}, "), this node will only operate on the particles in that stream."]}], "type": "dt", "indent": 0, "extent": [15, 28], "text": ["First Input"]}, {"body": [{"indent": 4, "type": "para", "extent": [4452, 4677], "text": ["If the second input is wired in rather than the first, it becomes a reference stream.  This lets one refer to another stream of particles for the purpose of defining the source group, but leave its network chain intact."]}], "indent": 0, "type": "dt", "extent": [4438, 4452], "text": ["Second Input"]}], "type": "dt_group", "container": true}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [4398, 4406], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [29, 95], "text": ["The output of this node should be wired into a solver chain."]}, {"type": "para", "indent": 4, "extent": [95, 159], "text": ["Merge nodes can be used to combine multiple solver chains."]}, {"type": "para", "indent": 4, "extent": [159, 316], "text": ["The final wiring should go into one of the purple inputs of a full-solver, such as ", {"text": ["POP Solver"], "fullpath": "/nodes/dop/popsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/popsolver"}, " or ", {"text": ["FLIP Solver"], "fullpath": "/nodes/dop/flipsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/flipsolver"}, "."]}], "type": "dt", "indent": 0, "extent": [15, 29], "text": ["First Output"]}], "type": "dt_group", "container": true}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "extent": [4677, 4686], "container": true, "type": "outputs_section", "id": "outputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [29, 325], "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "]}, {"type": "para", "indent": 4, "extent": [325, 519], "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "]}, {"type": "para", "indent": 4, "extent": [519, 692], "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [692, 775], "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "]}, {"type": "para", "indent": 4, "extent": [775, 883], "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."]}], "type": "dt", "indent": 0, "extent": [16, 29], "text": ["channelname"]}, {"body": [{"type": "para", "indent": 4, "extent": [891, 1132], "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."]}], "type": "dt", "indent": 0, "extent": [883, 891], "text": ["DATACT"]}, {"body": [{"type": "para", "indent": 4, "extent": [1140, 1383], "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."]}], "type": "dt", "indent": 0, "extent": [1132, 1140], "text": ["DATACF"]}, {"body": [{"type": "para", "indent": 4, "extent": [1392, 1594], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [1594, 1712], "text": ["In this case, this value is set to the\n    name of the relationship the data to which the data is being attached."]}], "type": "dt", "indent": 0, "extent": [1383, 1392], "text": ["RELNAME"]}, {"body": [{"type": "para", "indent": 4, "extent": [1723, 1925], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [1925, 2128], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."]}], "type": "dt", "indent": 0, "extent": [1712, 1723], "text": ["RELOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "extent": [2141, 2343], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [2343, 2528], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."]}], "type": "dt", "indent": 0, "extent": [2128, 2141], "text": ["RELOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "extent": [2542, 2744], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [2744, 2947], "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."]}], "type": "dt", "indent": 0, "extent": [2528, 2542], "text": ["RELAFFOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "extent": [2963, 3165], "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "extent": [3165, 3350], "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."]}], "type": "dt", "indent": 0, "extent": [2947, 2963], "text": ["RELAFFOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "extent": [20, 107], "text": ["This value is the simulation time for which the node is being\n    evaluated. "]}, {"type": "para", "indent": 4, "extent": [107, 326], "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " ", {"text": ["Offset Time"], "type": "ui"}, " and ", {"text": ["Time Scale"], "type": "ui"}, "\n    parameters. "]}, {"type": "para", "indent": 4, "extent": [326, 555], "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"text": ["$ST == 0"], "type": "code"}, " rather than\n    ", {"text": ["$T == 0"], "type": "code"}, " or ", {"text": ["$FF == 1"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "extent": [16, 20], "text": ["ST"]}, {"body": [{"type": "para", "indent": 4, "extent": [559, 700], "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."]}, {"type": "para", "indent": 4, "extent": [700, 999], "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."]}], "type": "dt", "indent": 0, "extent": [555, 559], "text": ["SF"]}, {"body": [{"type": "para", "indent": 4, "extent": [1009, 1181], "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."]}], "type": "dt", "indent": 0, "extent": [999, 1009], "text": ["TIMESTEP"]}, {"body": [{"type": "para", "indent": 4, "extent": [1187, 1305], "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."]}], "type": "dt", "indent": 0, "extent": [1181, 1187], "text": ["SFPS"]}, {"body": [{"type": "para", "indent": 4, "extent": [1312, 1523], "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "]}, {"type": "para", "indent": 4, "extent": [1523, 1621], "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"text": ["object_$SNOBJ"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "extent": [1305, 1312], "text": ["SNOBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [1627, 1859], "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "]}, {"type": "para", "indent": 4, "extent": [1859, 1991], "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [1621, 1627], "text": ["NOBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [1996, 2322], "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "]}, {"type": "para", "indent": 4, "extent": [2322, 2616], "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [1991, 1996], "text": ["OBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [2623, 2883], "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "]}, {"type": "para", "indent": 4, "extent": [2883, 3168], "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "]}, {"type": "para", "indent": 4, "extent": [3168, 3406], "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [2616, 2623], "text": ["OBJID"]}, {"body": [{"type": "para", "indent": 4, "extent": [3417, 3556], "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."]}], "type": "dt", "indent": 0, "extent": [3406, 3417], "text": ["ALLOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "extent": [3569, 3687], "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."]}], "type": "dt", "indent": 0, "extent": [3556, 3569], "text": ["ALLOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "extent": [3694, 3801], "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [3801, 4057], "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"text": ["$ST == $OBJCT"], "type": "code"}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [3687, 3694], "text": ["OBJCT"]}, {"body": [{"type": "para", "indent": 4, "extent": [4064, 4172], "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [4172, 4389], "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [4057, 4064], "text": ["OBJCF"]}, {"body": [{"type": "para", "indent": 4, "extent": [4398, 4486], "text": ["This is a string value containing the name of the object being\n    processed. "]}, {"type": "para", "indent": 4, "extent": [4486, 4748], "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "]}, {"type": "para", "indent": 4, "extent": [4748, 5194], "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named \"myobject\",\n    specifying ", {"text": ["strcmp($OBJNAME, \"myobject\") == 0"], "type": "code"}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [4389, 4398], "text": ["OBJNAME"]}, {"body": [{"type": "para", "indent": 4, "extent": [5202, 5425], "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."]}], "type": "dt", "indent": 0, "extent": [5194, 5202], "text": ["DOPNET"]}], "type": "dt_group", "container": true}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [5431, 5620], "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"text": ["Position node"], "fullpath": "/nodes/dop/position", "scheme": "Node", "type": "link", "value": "/nodes/dop/position"}, ",\n    you could write the expression:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [5620, 5650], "text": ["\n    $tx + 0.1\n    "]}, {"type": "para", "indent": 4, "extent": [5650, 5730], "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."]}], "role": "item", "indent": 0, "extent": [5425, 5431], "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "extent": [4719, 4727], "container": true, "type": "locals_section", "id": "locals"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [4800, 4837], "text": [{"text": ["Upres Sand"], "fullpath": "/shelf/upressand", "scheme": null, "type": "link", "value": "/shelf/upressand"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [4791, 4800], "container": true, "type": "related_section", "id": "related"}], "title": ["POP Replicate"], "summary": ["A POP Node that generates particles from incoming particles."], "attrs": {"version": null, "namespace": null, "internal": "popreplicate", "context": "dop", "type": "node", "icon": "POP/split"}, "included": ["/nodes/dop/popCommonParms", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_locals", "/nodes/dop/standard_pop_inputs", "/nodes/dop/standard_pop_outputs", "/nodes/dop/standard_pop_parms", "/shelf/dynamics_popreplicate"], "type": "root"}