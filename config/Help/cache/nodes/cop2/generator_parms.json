{"body": [{"body": [{"indent": 0, "type": "para", "extent": [27, 203], "text": ["The mask parameters control the mask applied when a node is\nconnected to the mask input. The Effect Amount parameter is\nalways available, whether a mask is connected or not."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [241, 350], "text": ["If no mask is present, this multiplies the output by a\n    constant amount (0 = black, 1 = all output)."]}, {"indent": 4, "type": "para", "extent": [350, 410], "text": ["If a mask is present, this amount multiplies the mask."]}], "indent": 0, "text": ["Effect Amount"], "attrs": {"id": "effectamount"}, "extent": [203, 218], "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [442, 610], "text": ["A mask can be a component of a plane or an entire plane. If\n    a vector plane is supplied as a mask, its components are\n    multiplied by the images' components."]}, {"body": [{"body": [{"lang": null, "indent": 8, "type": "pre", "extent": [640, 730], "text": ["\n        C.r = I.r * M\n        C.g = I.g * M\n        C.b = I.b * M\n        "]}], "indent": 4, "type": "dt", "extent": [610, 640], "text": ["Scalar Mask ('A', 'C.r')"]}, {"body": [{"lang": null, "indent": 8, "type": "pre", "extent": [754, 850], "text": ["\n        C.r = I.r * M.r\n        C.g = I.g * M.g\n        C.b = I.b * M.b\n        "]}], "indent": 4, "type": "dt", "extent": [730, 754], "text": ["Vector Mask ('C')"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Mask Plane"], "attrs": {"id": "maskinput"}, "extent": [410, 422], "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [864, 1021], "text": ["Inverts the mask so that all fully 'masked' portions become\n    unmasked. This saves you from inserting an Invert COP after\n    the node with the mask."]}], "indent": 0, "type": "dt", "extent": [850, 864], "text": ["Invert Mask"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Mask"], "extent": [16, 27], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [1033, 1155], "text": ["Parameters relating to the structure of the image generated,\nincluding Resolution, Pixel Aspect Ratio and Raster Depth."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [1185, 1337], "text": ["If off, the resolution of the image is defined by the\n    resolution in the Composite Project settings. If on, any\n    resolution can be specified."]}], "indent": 0, "text": ["Override Size"], "attrs": {"id": "size"}, "extent": [1155, 1170], "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [1374, 1551], "text": ["If off, the pixel aspect ratio of the image is defined by\n    the pixel aspect ratio in the Composite Project settings. If\n    on, any pixel aspect ratio can be specified."]}, {"indent": 4, "type": "para", "extent": [1551, 1828], "text": ["The pixel aspect ratio determines the shape of the pixel; it\n    represents the width of the pixel compared to the height. A\n    pixel with an aspect ratio of '2' is twice as wide as it is\n    high (2:1). Pixel aspect ratios less than 1 are taller than\n    they are wide."]}, {"indent": 4, "type": "para", "extent": [1828, 2135], "text": ["The image viewer attempts to show the image as it would\n    appear by horizontally scaling the image by the pixel aspect\n    ratio. This can result in slight artifacts for non-integer\n    ratios (ie, 0.9:1, 1.442:1). Turn off 'Fast Pixel Aspect' in\n    the Display Options to suppress these artifacts."]}, {"indent": 4, "type": "para", "extent": [2135, 2295], "text": ["Many effect filters that have parameters that represent\n    width and height will have the width scaled appropriately\n    (such as Blur, Defocus, Expand)."]}], "indent": 0, "text": ["Pixel Aspect Ratio"], "attrs": {"id": "aspect"}, "extent": [1337, 1357], "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [2309, 2455], "text": ["Specifies the plane(s) to generate. Color and Alpha will\n    always be present, but the generator does not always have to\n    write to them."]}, {"indent": 4, "type": "para", "extent": [2455, 2597], "text": ["The list of planes is all the ones Houdini recognizes as\n    special. Other planes can be added with the 'Custom Planes'\n    parameter."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2617, 2641], "text": ["Color and Alpha"]}], "indent": 4, "type": "dt", "extent": [2597, 2617], "text": ["C, A (C:rgb A)"]}, {"body": [{"indent": 8, "type": "para", "extent": [2665, 2699], "text": ["Color and 3-channel Alpha"]}], "indent": 4, "type": "dt", "extent": [2641, 2665], "text": ["C, A (C:rgb A:rgb)"]}, {"body": [{"indent": 8, "type": "para", "extent": [2712, 2731], "text": ["Color only"]}], "indent": 4, "type": "dt", "extent": [2699, 2712], "text": ["C (rgb)"]}, {"body": [{"indent": 8, "type": "para", "extent": [2738, 2757], "text": ["Alpha only"]}], "indent": 4, "type": "dt", "extent": [2731, 2738], "text": ["A"]}, {"body": [{"indent": 8, "type": "para", "extent": [2770, 2799], "text": ["3-channel Alpha only"]}], "indent": 4, "type": "dt", "extent": [2757, 2770], "text": ["A (rgb)"]}, {"body": [{"indent": 8, "type": "para", "extent": [2806, 2825], "text": ["Mask plane"]}], "indent": 4, "type": "dt", "extent": [2799, 2806], "text": ["M"]}, {"body": [{"indent": 8, "type": "para", "extent": [2838, 2867], "text": ["3-channel Mask plane"]}], "indent": 4, "type": "dt", "extent": [2825, 2838], "text": ["M (rgb)"]}, {"body": [{"indent": 8, "type": "para", "extent": [2874, 2896], "text": ["Z Depth plane"]}], "indent": 4, "type": "dt", "extent": [2867, 2874], "text": ["Z"]}, {"body": [{"indent": 8, "type": "para", "extent": [2903, 2927], "text": ["Luminance plane"]}], "indent": 4, "type": "dt", "extent": [2896, 2903], "text": ["L"]}, {"body": [{"indent": 8, "type": "para", "extent": [2939, 2958], "text": ["Bump plane"]}], "indent": 4, "type": "dt", "extent": [2927, 2939], "text": ["B (uv)"]}, {"body": [{"indent": 8, "type": "para", "extent": [2971, 2991], "text": ["Point plane"]}], "indent": 4, "type": "dt", "extent": [2958, 2971], "text": ["P (xyz)"]}, {"body": [{"indent": 8, "type": "para", "extent": [3004, 3025], "text": ["Normal plane"]}], "indent": 4, "type": "dt", "extent": [2991, 3004], "text": ["N (xyz)"]}, {"body": [{"indent": 8, "type": "para", "extent": [3038, 3061], "text": ["Velocity plane"]}], "indent": 4, "type": "dt", "extent": [3025, 3038], "text": ["V (xyz)"]}, {"body": [{"indent": 8, "type": "para", "extent": [3071, 3101], "text": ["No planes generated."]}], "indent": 4, "type": "dt", "extent": [3061, 3071], "text": ["None"]}], "container": true, "type": "dt_group"}], "indent": 0, "type": "dt", "extent": [2295, 2309], "text": ["Image Planes"]}, {"body": [{"indent": 4, "type": "para", "extent": [3112, 3340], "text": ["When a generator is connected to an input, it generates a\n    Mask plane by default. This parameter determines which\n    planes are generated in this case. The list of planes to\n    generate are the same as 'Image Planes'."]}, {"indent": 4, "type": "para", "extent": [3340, 3494], "text": ["In addition, if the plane already exists in the input\n    sequence, one of the following operations will be performed\n    to combine the new plane."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3507, 3574], "text": ["Input plane replaced by the generated plane.\n        ", {"text": ["(G)"], "type": "code"}]}], "indent": 4, "type": "dt", "extent": [3494, 3507], "text": ["Replace"]}, {"body": [{"indent": 8, "type": "para", "extent": [3586, 3619], "text": ["Generated plane renamed."]}], "indent": 4, "type": "dt", "extent": [3574, 3586], "text": ["Rename"]}, {"body": [{"indent": 8, "type": "para", "extent": [3628, 3694], "text": ["Input plane added to the generated plane.\n        ", {"text": ["(I+G)"], "type": "code"}]}], "indent": 4, "type": "dt", "extent": [3619, 3628], "text": ["Add"]}, {"body": [{"indent": 8, "type": "para", "extent": [3706, 3793], "text": ["Input plane photographically added to the generated plane.\n        ", {"text": ["(I+G-I*G)"], "type": "code"}]}], "indent": 4, "type": "dt", "extent": [3694, 3706], "text": ["Screen"]}, {"body": [{"indent": 8, "type": "para", "extent": [3807, 3881], "text": ["Generated plane subtracted from the input plane.\n        ", {"text": ["(I-G)"], "type": "code"}, "."]}], "indent": 4, "type": "dt", "extent": [3793, 3807], "text": ["Subtract"]}, {"body": [{"indent": 8, "type": "para", "extent": [3895, 3966], "text": ["Input plane multiplied by the generated plane.\n        ", {"text": ["(IxG)"], "type": "code"}]}], "indent": 4, "type": "dt", "extent": [3881, 3895], "text": ["Multiply"]}, {"body": [{"indent": 8, "type": "para", "extent": [3975, 4055], "text": ["Minimum pixel value of input and generated planes.\n        ", {"text": ["(min{I,G})"], "type": "code"}]}], "indent": 4, "type": "dt", "extent": [3966, 3975], "text": ["Min"]}, {"body": [{"indent": 8, "type": "para", "extent": [4064, 4144], "text": ["Maximum pixel value of input and generated planes.\n        ", {"text": ["(max{I,G})"], "type": "code"}]}], "indent": 4, "type": "dt", "extent": [4055, 4064], "text": ["Max"]}, {"body": [{"indent": 8, "type": "para", "extent": [4157, 4239], "text": ["Average pixel value of the input and generated planes.\n        ", {"text": ["(I+G)/2"], "type": "code"}]}], "indent": 4, "type": "dt", "extent": [4144, 4157], "text": ["Average"]}], "container": true, "type": "dt_group"}], "indent": 0, "type": "dt", "extent": [3101, 3112], "text": ["Add Plane"]}, {"body": [{"indent": 4, "type": "para", "extent": [4284, 4375], "text": ["This string parameter allows you to create your own plane\n    formats. The syntax is:"]}, {"lang": null, "indent": 4, "type": "pre", "extent": [4375, 4461], "text": ["\n    planename(arraysize){comp1,comp2,comp3,comp4}:format(black,white)\n    "]}, {"indent": 4, "type": "para", "extent": [4461, 4802], "text": ["All parts are optional except for ", {"text": ["planename"], "type": "code"}, ". ", {"text": ["arraysize"], "type": "code"}, " must\n    be 1 or greater (default 1). ", {"text": ["comp1"], "type": "code"}, " to ", {"text": ["comp4"], "type": "code"}, " are arbitrary strings\n    representing the component names. ", {"text": ["format"], "type": "code"}, " is either ", {"text": ["i8"], "type": "code"}, ",\n    ", {"text": ["i16"], "type": "code"}, ", ", {"text": ["i32"], "type": "code"}, ", ", {"text": ["f16"], "type": "code"}, " or ", {"text": ["f32"], "type": "code"}, ". ", {"text": ["black"], "type": "code"}, " and ", {"text": ["white"], "type": "code"}, " are integers\n    representing the black & white points for integer formats."]}], "indent": 0, "text": ["Custom Planes"], "attrs": {"channels": "/customplanes"}, "extent": [4239, 4254], "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [4816, 4941], "text": ["The byte format of the image. Higher bit depths provide\n    better color resolution and range at the expense of memory."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [4960, 5048], "text": ["Lowest bit depth. Banding can occasionally be seen.\n        Suitable for video."]}], "indent": 4, "type": "dt", "extent": [4941, 4960], "text": ["8 Bit Integer"]}, {"body": [{"indent": 8, "type": "para", "extent": [5068, 5216], "text": ["Intermediate bit depth. No banding can be seen, though\n        clipping can still occur below and above the black and\n        white points."]}], "indent": 4, "type": "dt", "extent": [5048, 5068], "text": ["16 Bit Integer"]}, {"body": [{"indent": 8, "type": "para", "extent": [5236, 5394], "text": ["Generally not used for color, 32bit integer values are\n        used to store object IDs, counts, and other integer\n        values with a large range."]}], "indent": 4, "type": "dt", "extent": [5216, 5236], "text": ["32 Bit Integer"]}, {"body": [{"indent": 8, "type": "para", "extent": [5421, 5745], "text": ["High bit depth. No banding can be seen, and no clipping\n        occurs at white and black. Uses less memory than 32 bit\n        float, however processing time for this format is\n        slightly higher as it is not a native CPU data format.\n        This format supports values in the range -65504 to\n        +65504."]}], "indent": 4, "type": "dt", "extent": [5394, 5421], "text": ["16 Bit Floating Point"]}, {"body": [{"indent": 8, "type": "para", "extent": [5772, 5949], "text": ["High bit depth. No banding can be seen, and no clipping\n        occurs at white and black. Uses 4\u00d7 as much memory as\n        8bit, which is this format\u2019s main drawback."]}], "indent": 4, "type": "dt", "extent": [5745, 5772], "text": ["32 Bit Floating Point"]}, {"body": [{"indent": 8, "type": "para", "extent": [5968, 6058], "text": ["Use the raster depth specified in the Composite Project\n        options."]}], "indent": 4, "type": "dt", "extent": [5949, 5968], "text": ["Default Depth"]}], "container": true, "type": "dt_group"}], "indent": 0, "type": "dt", "extent": [4802, 4816], "text": ["Raster Depth"]}, {"body": [{"indent": 4, "type": "para", "extent": [6097, 6369], "text": ["The integer formats (8, 16 and 32 bit) can specify the raw\n    values that the black and white points occur at. The white\n    point must always be higher than the black point. The\n    minimum and maximum values for the black and white points\n    for each format are:"]}, {"body": [{"body": [{"indent": 12, "text": [" 8 bit"], "tag": "td", "attrs": {}, "extent": [6394, 6417], "type": "pxml"}, {"indent": 12, "text": [" :"], "tag": "td", "attrs": {}, "extent": [6417, 6436], "type": "pxml"}, {"indent": 12, "text": [" 0 - 255"], "tag": "td", "attrs": {}, "extent": [6436, 6461], "type": "pxml"}], "indent": 8, "tag": "tr", "attrs": {}, "extent": [6381, 6394], "type": "pxml"}, {"body": [{"indent": 12, "text": [" 16 bit"], "tag": "td", "attrs": {}, "extent": [6474, 6498], "type": "pxml"}, {"indent": 12, "text": [" :"], "tag": "td", "attrs": {}, "extent": [6498, 6517], "type": "pxml"}, {"indent": 12, "text": [" 0 - 65535"], "tag": "td", "attrs": {}, "extent": [6517, 6544], "type": "pxml"}], "indent": 8, "tag": "tr", "attrs": {}, "extent": [6461, 6474], "type": "pxml"}, {"body": [{"indent": 12, "text": [" 32 bit"], "tag": "td", "attrs": {}, "extent": [6557, 6581], "type": "pxml"}, {"indent": 12, "text": [" :"], "tag": "td", "attrs": {}, "extent": [6581, 6600], "type": "pxml"}, {"indent": 12, "text": [" 0 - 2,147,483,647"], "tag": "td", "attrs": {}, "extent": [6600, 6635], "type": "pxml"}], "indent": 8, "tag": "tr", "attrs": {}, "extent": [6544, 6557], "type": "pxml"}], "indent": 4, "tag": "table", "attrs": {}, "extent": [6369, 6381], "type": "pxml"}, {"indent": 4, "type": "para", "extent": [6635, 6730], "text": ["Floating point formats always have their black point at 0\n    and their white point at 1."]}], "indent": 0, "text": ["Black/White Points"], "attrs": {"id": "bwpoints"}, "extent": [6058, 6078], "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [6743, 6836], "text": ["Controls the ability to generate images that are compatible\n    with interlaced images."]}, {"indent": 4, "type": "para", "extent": [6836, 7072], "text": ["If you are manipulating the generated output with a filter\n    that uses neighboring pixels (like Blur or Expand), it is\n    recommended that you do not use Black Interlaced, as the\n    filter will use the black scanlines as well."]}, {"indent": 4, "type": "para", "extent": [7072, 7155], "text": ["The second menu determines which scanlines are in which\n    fields (odd,even)"]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [7165, 7198], "text": ["No interlacing."]}], "indent": 4, "type": "dt", "extent": [7155, 7165], "text": ["None"]}, {"body": [{"indent": 8, "type": "para", "extent": [7223, 7330], "text": ["The image is half the height of a normal frame, with\n        the scanlines on every line."]}], "indent": 4, "type": "dt", "extent": [7198, 7223], "text": ["Half Res Interlaced"]}, {"body": [{"indent": 8, "type": "para", "extent": [7352, 7472], "text": ["The image is the same height as a normal frame, with\n        the inactive scanlines filled with black."]}], "indent": 4, "type": "dt", "extent": [7330, 7352], "text": ["Black Interlaced"]}, {"body": [{"indent": 8, "type": "para", "extent": [7490, 7634], "text": ["The image is the same height as a normal frame, with\n        the inactive scanlines filled with their active\n        neighbor."]}], "indent": 4, "type": "dt", "extent": [7472, 7490], "text": ["Line Doubled"]}, {"body": [{"indent": 8, "type": "para", "extent": [7652, 7749], "text": ["Odd-numbered scanline fields come before even-numbered\n        scanline fields."]}], "indent": 4, "type": "dt", "extent": [7634, 7652], "text": ["Odd Dominant"]}, {"body": [{"indent": 8, "type": "para", "extent": [7768, 7865], "text": ["Even-numbered scanline fields come before odd-numbered\n        scanline fields."]}], "indent": 4, "type": "dt", "extent": [7749, 7768], "text": ["Even Dominant"]}, {"body": [{"indent": 8, "type": "para", "extent": [7886, 7951], "text": ["Only odd-numbered scanline fields are produced."]}], "indent": 4, "type": "dt", "extent": [7865, 7886], "text": ["Odd Frames Only"]}, {"body": [{"indent": 8, "type": "para", "extent": [7973, 8031], "text": ["Only even-numbered scanline fields are produced."]}], "indent": 4, "type": "dt", "extent": [7951, 7973], "text": ["Even Frames Only"]}], "container": true, "type": "dt_group"}], "indent": 0, "type": "dt", "extent": [6730, 6743], "text": ["Interlacing"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Image"], "extent": [1021, 1033], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [8046, 8147], "text": ["This tab contains parameters which deal with the timing and\nframe range of the generated sequence."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [8170, 8335], "text": ["If off, the global animation range is used as the frame\n    range. If on, the frame range of the sequence can be\n    specified in the following parameters."]}], "indent": 0, "type": "dt", "extent": [8147, 8170], "text": ["Override Global Range"]}, {"body": [{"indent": 4, "type": "para", "extent": [8348, 8498], "text": ["A still image is time-invariant. It exists at every frame.\n    If off, the Start Frame and Length are used to determine the\n    frame range."]}], "indent": 0, "type": "dt", "extent": [8335, 8348], "text": ["Still Image"]}, {"body": [{"indent": 4, "type": "para", "extent": [8527, 8567], "text": ["The starting frame of the sequence."]}], "indent": 0, "text": ["Start Frame"], "attrs": {"id": "start"}, "extent": [8498, 8511], "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [8592, 8663], "text": ["The length of the sequence (number of frames in the\n    sequence)."]}], "indent": 0, "text": ["Length"], "attrs": {"id": "length"}, "extent": [8567, 8575], "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [8690, 8756], "text": ["If on, the frame rate of the sequence can be overridden."]}], "indent": 0, "text": ["Frame Rate"], "attrs": {"id": "rate"}, "extent": [8663, 8675], "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [8768, 8870], "text": ["For sequences with a frame range, this determines how to\n    show frames before the start frame."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [8888, 8911], "text": ["Display black."]}], "indent": 4, "type": "dt", "extent": [8870, 8888], "text": ["Black Frames"]}, {"body": [{"indent": 8, "type": "para", "extent": [8922, 8977], "text": ["Cycle the sequence, always playing it forward."]}], "indent": 4, "type": "dt", "extent": [8911, 8922], "text": ["Cycle"]}, {"body": [{"indent": 8, "type": "para", "extent": [8989, 9062], "text": ["Cycle the sequence, reversing the direction every\n        cycle."]}], "indent": 4, "type": "dt", "extent": [8977, 8989], "text": ["Mirror"]}, {"body": [{"indent": 8, "type": "para", "extent": [9072, 9115], "text": ["Hold the first frame indefinitely."]}], "indent": 4, "type": "dt", "extent": [9062, 9072], "text": ["Hold"]}, {"body": [{"indent": 8, "type": "para", "extent": [9134, 9244], "text": ["Hold the first frame for a certain number of frames;\n        before that, show black frames."]}], "indent": 4, "type": "dt", "extent": [9115, 9134], "text": ["Hold N Frames"]}], "container": true, "type": "dt_group"}], "indent": 0, "type": "dt", "extent": [8756, 8768], "text": ["Pre Extend"]}, {"body": [{"indent": 4, "type": "para", "extent": [9272, 9367], "text": ["The number of frames to hold the first frame for, if 'Hold\n    N Frames' is selected."]}], "indent": 0, "text": ["Pre Hold"], "attrs": {"id": "prehold"}, "extent": [9244, 9254], "type": "dt"}, {"body": [{"indent": 4, "type": "para", "extent": [9380, 9480], "text": ["For sequences with a frame range, this determines how to\n    show frames after the last frame."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [9498, 9521], "text": ["Display black."]}], "indent": 4, "type": "dt", "extent": [9480, 9498], "text": ["Black Frames"]}, {"body": [{"indent": 8, "type": "para", "extent": [9532, 9587], "text": ["Cycle the sequence, always playing it forward."]}], "indent": 4, "type": "dt", "extent": [9521, 9532], "text": ["Cycle"]}, {"body": [{"indent": 8, "type": "para", "extent": [9599, 9672], "text": ["Cycle the sequence, reversing the direction every\n        cycle."]}], "indent": 4, "type": "dt", "extent": [9587, 9599], "text": ["Mirror"]}, {"body": [{"indent": 8, "type": "para", "extent": [9682, 9724], "text": ["Hold the last frame indefinitely."]}], "indent": 4, "type": "dt", "extent": [9672, 9682], "text": ["Hold"]}, {"body": [{"indent": 8, "type": "para", "extent": [9743, 9851], "text": ["Hold the last frame for a certain number of frames;\n        after that, show black frames."]}], "indent": 4, "type": "dt", "extent": [9724, 9743], "text": ["Hold N Frames"]}], "container": true, "type": "dt_group"}], "indent": 0, "type": "dt", "extent": [9367, 9380], "text": ["Post Extend"]}, {"body": [{"indent": 4, "type": "para", "extent": [9881, 9970], "text": ["The number of frames to hold the last frame for, if 'Hold N\n    Frames' is selected."]}], "indent": 0, "text": ["Post Hold"], "attrs": {"id": "posthold"}, "extent": [9851, 9862], "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Sequence"], "extent": [8031, 8046], "container": true, "type": "h", "id": null}], "type": "root", "attrs": {"type": "include"}}